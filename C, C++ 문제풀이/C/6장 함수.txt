6장 함수.

문제 1.
#include <stdio.h>
#include <math.h>

float height(float len, float deg);

int main()
{
	float a, b, x;

	printf("밑변의 길이와 높이를 입력하시오. :");
	scanf_s("%f %f", &a, &b);

	x = height(a, b);

	printf("삼각형의 높이는 %f입니다", x);
}

float height(float len, float deg)
{
	float sum;

	sum = len * tan(deg);

	return sum;
}

문제 2.
#include <stdio.h>

void bs(int a, int b);

int main()
{
	int x, y;

	printf("배수를 판단할 두 정수를 입력해주세요\n");
	printf("첫번째 정수 : ");
	scanf_s("%d", &x);

	printf("두번째 정수 : ");
	scanf_s("%d", &y);

	bs(x, y);
	
}

void bs(int a, int b)
{

	if (a > b)
		if (a % b == 0)
			printf("%d는 %d의 배수입니다", a, b);

		else
			printf("%d는 %d의 배수가 아닙니다", a, b);
	else
		if(b % a == 0)
			printf("%d는 %d의 배수입니다", b, a);
		else
			printf("%d는 %d의 배수가 아닙니다", b, a);
}

문제 3.
#include <stdio.h>
#include <math.h>

float gs(float x1, float x2, float y1, float y2);

int main()
{
	float a1, a2, b1, b2, sum;
	
	printf("첫번째 좌표값을 입력해주세요 : ");
	scanf_s("%f %f", &a1, &b1);

	printf("두번째 좌표값을 입력해주세요 : ");
	scanf_s("%f %f", &a2, &b2);

	sum = gs(a1, b1, a2, b2);

	printf("두 점사이의 거리는 %.2f입니다", sum);
	
}

float gs(float x1, float y1, float x2, float y2)
{
	float d;

	d = sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));

	return d;
}

문제 4.
#include <stdio.h>
#include <math.h>

float sa(float n, float m)
{
	float sum;

	sum = (n + m) / 2;

	return sum;
}

float gi(float n, float m)
{
	float sum;

	sum = sqrt(n*m);

	return sum;
}

float zo(float n, float m)
{
	float sum;

	sum = 2 * n * m / (n + m);

	return sum;
}

int main()
{
	float a, b, sum1, sum2, sum3;
	
	printf("두 수를 입력하시오. ---> ");
	scanf_s("%f %f", &a, &b);

	sum1 = sa(a, b);
	sum2 = gi(a, b);
	sum3 = zo(a, b);

	printf("산술,기하,조화평균을 구한 값은 다음과 같습니다.\n");
	printf("산술평균 = %.2f 기하평균 = %.2f 조화평균 = %.2f", sum1, sum2, sum3);
}

문제 5.
#include <stdio.h>
#include <math.h>

int sumofpower(int n, int k);

int main()
{
	int a, b, sum;

	printf("두 수를 입력하시오. :");
	scanf_s("%d %d", &a, &b);

	sum = sumofpower(a, b);

	printf("1^%d + -- +%d^%d까지의 수열의 합 = %d", b, a, b, sum);
}

int sumofpower(int n, int k)
{
	int sum = 0;

	for (int i = 1; i <= n; i++)
	{
		sum += pow(i, k);
	}
	return sum;
}

문제 6.
#include <stdio.h>
#include <math.h>

void es(int a, int b, int c);
void es1(int a, int b, int c);

int main()
{
	int a, b, c;

	printf("3가지 정수 입력: ");
	scanf_s("%d %d %d", &a, &b, &c);

	if (((b*b) - (4 * a*c) > 0))
		es(a, b, c);

	else if (((b*b) - (4 * a*c) == 0))
		es1(a, b, c);

	else
		printf("근이 없습니다");
}

void es(int a, int b, int c)
{
	float x, y;

	x = (-b + sqrt(b*b - (4 * a*c))) / (2 * a);
	y = (-b - sqrt(b*b - (4 * a*c))) / (2 * a);
	printf("이차방정식의 근은 %.2f %.2f 입니다", x, y);
}

void es1(int a, int b, int c)
{
	float x;

	x = (-b + sqrt(b*b - (4 * a*c))) / (2 * a);
	printf("이차방정식의 근은 %.2f입니다", x);
}

문제 7.
#include <stdio.h>
#include <math.h>

void es(float n, int k);

int main()
{
	float a;
	int b;
	char c;

	while (1)
	{
		printf("계산하실 실수값을 입력해주세요 : ");
		scanf_s("%f", &a);

		printf("정수값을 입력해주세요 : ");
		scanf_s("%d", &b);

		es(a, b);

		printf("다시 계산하시겠습니까? <Y/N> :");
		getchar();
		c = getchar();

		if (c == 'n' || c == 'N')
			break;

		else if (c == 'y' || c == 'Y')
			continue;

		else
			printf("잘못입력하셨습니다");
			break;
	}
}

void es(float n, int k)
{
	float sum;
	
	if (k >= 0)
	{
		sum = pow(n, k);
		printf("%f\n", sum);
	}
	else
	{
		sum = 1 / pow(n, -k);
		printf("%f\n", sum);
	}
}

문제 8.
#include <iostream>
#include <math.h>
using namespace std;

int main()
{
	int i;
	double a, sum, temp;

	cout << "제곱근을 구할 수를 입력하세요. : ";
	cin >> a;

	sum = (0.5 * (1 + a / 1));
	temp = 0;
	for (i = 1; ; i++)
	{
		sum = 0.5 * (sum + a / (temp = sum));

		if (temp - sum <= pow(10, -6))
			break;
	}

	cout << "함수에 의해 구한 " << a << "의 제곱근 = " << sum << endl;
	cout << "라이브러리 함수 sqrt(" << a << ") = " << sqrt(a) << endl;
}

문제 9.
#include <stdio.h>
#include <math.h>

int event(int n)
{
	int sum;

	if (n % 2 == 0)
		sum = 1;

	else
		sum = 0;

	return sum;
}

int absolute(int n)
{
	int sum;

	sum = abs(n);

	return sum;
}

int sign(int n)
{
	int sum;

	if (n > 0)
		sum = 1;

	else if (n < 0)
		sum = -1;

	else
		sum = 0;

	return sum;
}

int main()
{
	int a, sum;

	printf("정수를 입력해주세요 :");
	scanf_s("%d", &a);

	if (event(a) == 1)
		printf("주어진 정수는 짝수입니다.\n");
	else
		printf("주어진 정수는 홀수입니다.\n");

	sum = absolute(a);

	printf("주어진 정수의 절대값은 %d입니다.\n", sum);

	if (sign(a) == 1)
		printf("주어진 정수는 양수입니다.\n");
	else if(sign(a) == -1)
		printf("주어진 정수는 음수입니다.\n");
	else
		printf("주어진 정수는 양수,음수가 아닌 0 입니다.\n");
}

문제 10.
#include <stdio.h>

float sp(int n)
{
	float sum;

	sum = 3.14 * n * n;

	return sum;
}

float tr(int n, int m)
{
	float sum;

	sum = 0.5 * n * m;

	return sum;
}

float qu(int n, int m)
{
	float sum;

	sum = n * m;

	return sum;
}

int main()
{
	int a, b, c;
	float sum;

	printf("1.원의 넓이		2.삼각형의 넓이		3.사각형의 넓이\n");
	printf("구하고자 하는 도형의 번호를 입력하시오 -->");
	scanf_s("%d", &a);

	switch (a)
	{
	case 1:
	{
		printf("반지름을 입력하시오 -->");
		scanf_s("%d", &b);

		sum = sp(b);
		printf("원의 넓이는 %.2f입니다", sum);
		break;
	}
	case 2:
	{
		printf("밑변을 입력하시오 -->");
		scanf_s("%d", &b);
		printf("높이을 입력하시오 -->");
		scanf_s("%d", &c);

		sum = tr(b, c);
		printf("삼각형의 넓이는 %.2f입니다", sum);
		break;
	}
	case 3:
	{
		printf("가로의 길이를 입력하시오 -->");
		scanf_s("%d", &b);
		printf("세로의 길이를 입력하시오 -->");
		scanf_s("%d", &c);

		sum = qu(b, c);
		printf("사각형의 넓이는 %.2f입니다", sum);
		break;
	}
	}
}

문제 11.
#include <stdio.h>

int age(int n, int m, char c);

int main()
{
	int a, b, sum;
	char c;

	printf("현재년도를 입력해주세요 :");
	scanf_s("%d", &a);

	printf("태어난 년도를 입력해주세요 :");
	scanf_s("%d", &b);

	printf("생일이 지났나요? <Y/N> :");
	getchar();
	c = getchar();

	sum = age(a, b, c);

	printf("만 나이는 %d 입니다", sum);
}

int age(int n, int m, char x)
{
	int k, sum;

	if (x == 'n' || x == 'N')
		k = 1;
	else
		k = 0;

	sum = (n - m) - k;

	return sum;
}

문제 12
#include <iostream>
#include <math.h>
using namespace std;

int recursion(int n);

int main()
{
	int a, sum;

	cout << "정수를 입력하시오. : ";
	cin >> a;

	sum = recursion(a);

	cout << "결과값 = " << sum << endl;
}

int recursion(int n)
{
	int sum = 0;

	if (n == 1)
		return 1;

	sum += recursion(n - 1) + n * (n + 1) / 2;

	return sum;
}

문제 13.
#include <iostream>
#include <math.h>
using namespace std;

int recursion(int n);

int main()
{
	int a, sum;

	cout << "정수를 입력하시오. : ";
	cin >> a;

	sum = recursion(a);

	cout << a << "항까지 점화식 수열의 합 = " << sum << endl;
}

int recursion(int n)
{
	if (n == 1)
		return 3;
	else if (n == 2)
		return 7;
	else
		return 2 * recursion(n - 1) + 1;
}

문제 14.
#include <iostream>
#include <math.h>
#define MAX 11
using namespace std;

int recursion(int n);

int main()
{
	int sum[MAX];

	for (int i = 0; i < MAX; i++)
	{
		sum[i] = recursion(i);
		cout << i << "까지 피보나치 수열의 결과 = " << sum[i] << endl;
	}
}

int recursion(int n)
{
	if (n == 0)
		return 0;
	if (n == 1 || n == 2)
		return 1;

	return recursion(n - 1) + recursion(n - 2);
}

